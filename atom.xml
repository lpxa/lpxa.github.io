<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://knightl8.club</id>
    <title>Knight</title>
    <updated>2020-03-06T14:13:09.604Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://knightl8.club"/>
    <link rel="self" href="https://knightl8.club/atom.xml"/>
    <subtitle>持续性幻想做梦,间接性努力行动.</subtitle>
    <logo>https://knightl8.club/images/avatar.png</logo>
    <icon>https://knightl8.club/favicon.ico</icon>
    <rights>All rights reserved 2020, Knight</rights>
    <entry>
        <title type="html"><![CDATA[1021个位数统计(15分)]]></title>
        <id>https://knightl8.club/post/1021-ge-wei-shu-tong-ji-15-fen/</id>
        <link href="https://knightl8.club/post/1021-ge-wei-shu-tong-ji-15-fen/">
        </link>
        <updated>2020-03-06T13:40:33.000Z</updated>
        <content type="html"><![CDATA[<hr>
<p>title: '1021个位数统计(15分)'<br>
date: 2020-03-06 14:36:37<br>
tags: [c语言学习]<br>
published: true<br>
hideInList: false<br>
feature:<br>
isTop: false</p>
<hr>
<p>给定一个 <em>k</em> 位整数 <em>N</em>=<em>d**k</em>−110<em>k</em>−1+⋯+<em>d</em>1101+<em>d</em>0 (0≤<em>d**i</em>≤9, <em>i</em>=0,⋯,<em>k</em>−1, <em>d**k</em>−1&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 <em>N</em>=100311，则有 2 个 0，3 个 1，和 1 个 3。</p>
<h3 id="输入格式">输入格式：</h3>
<p>每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 <em>N</em>。</p>
<h3 id="输出格式">输出格式：</h3>
<p>对 <em>N</em> 中每一种不同的个位数字，以 <code>D:M</code> 的格式在一行中输出该位数字 <code>D</code> 及其在 <em>N</em> 中出现的次数 <code>M</code>。要求按 <code>D</code> 的升序输出。</p>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-c">100311

      
    
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-c">0:2
1:3
3:1
</code></pre>
<h2 id="我的笨办法">我的笨办法:</h2>
<p>\</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

#include &lt;stdlib.h&gt;



int main(void)

{

​    

​    int a[10]={0};



​    char ch[1000];

​    scanf(&quot;%s&quot;,ch);



​    for(int i=0;ch[i]!='\0';i++)

​    {

​        switch(ch[i])

​        {

​            case '0':a[0]++;break;

​            case '1':a[1]++;break;

​            case '2':a[2]++;break;

​            case '3':a[3]++;break;

​            case '4':a[4]++;break;

​            case '5':a[5]++;break;

​            case '6':a[6]++;break;

​            case '7':a[7]++;break;

​            case '8':a[8]++;break;

​            case '9':a[9]++;break;



​        }

​        

​    }

​    for(int i=0;i&lt;10;i++)

​    {

​        if(a[i]!=0)

​        {

​            printf(&quot;%d:%d\n&quot;,i,a[i]);

​        }

​        

​    }





​    system(&quot;pause&quot;);

​    return 0;

}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据结构]]></title>
        <id>https://knightl8.club/post/shu-ju-jie-gou/</id>
        <link href="https://knightl8.club/post/shu-ju-jie-gou/">
        </link>
        <updated>2020-03-06T12:44:42.000Z</updated>
        <content type="html"><![CDATA[<h1 id="什么是线性表">什么是线性表</h1>
<p>&quot;线性表&quot;: 由同类型数据元素构成有序序列的线性结构</p>
<p>表中元素个数成为线性表的长度</p>
<p>线性表没有元素时,称为空表</p>
<p>表起始位置称为表头,表结束位置称为表尾.</p>
<h1 id="线性表的抽象数据类型表述">线性表的抽象数据类型表述</h1>
<h2 id="类型名称-线性表list">类型名称: 线性表(List)</h2>
<h2 id="数据对象集-线性表是n0个元素构成的有序序列a1a2an">数据对象集: 线性表是n(&gt;=0)个元素构成的有序序列(a1,a2,....an)</h2>
<h2 id="操作集线性表l数与list整数i表示位置元素x数与elementtype">操作集:线性表L数与List,整数i表示位置,元素x数与ElementType</h2>
<p>线性表基本操作主要有:</p>
<p>1  		List MakeEmpty();初始化一个空线性表</p>
<p>2		ElementType FindKth(int K,List L);	//根据位次序K,返回相应元素</p>
<p>3		int Find(ElementType X,List L);		//在线性表L中查找X的第一次出现位置</p>
<p>4		void Insert(ElementType X,int i,List l);	//在位序i前插入一个新元素X;</p>
<p>5		vod Delete(int i,List L);		删除指定位序i的元素</p>
<p>6		int Length(List L);			返回线性表L的长度n</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://knightl8.club/post/hello-gridea/</id>
        <link href="https://knightl8.club/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>